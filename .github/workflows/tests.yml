name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allow job to be triggered manually.
  workflow_dispatch:

# Cancel in-progress jobs when pushing to the same branch.
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python-version: ["3.6", "3.7", "3.12"]
        include:
          - os: "macos-latest"
            python-version: "3.12"
          - os: "windows-latest"
            python-version: "3.11"
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    name: Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    steps:

    - name: Acquire sources
      uses: actions/checkout@v3

    # https://github.com/docker-practice/actions-setup-docker
    # - name: Install Docker
    #   if: runner.os == 'Linux'
    #   uses: docker-practice/actions-setup-docker@master

    - name: Display Docker version
      if: runner.os == 'Linux'
      run: |
        docker version

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
        cache: 'pip'
        cache-dependency-path: 'setup.py'

    - name: Setup project
      run: |
        # Install package in editable mode.
        pip install versioningit wheel
        pip install --editable=.[test,develop]

    - name: Check code style
      if: matrix.python-version != '3.6'
      run: |
        poe lint

    - name: Run tests
      run: |
        poe test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
