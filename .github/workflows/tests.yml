name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    defaults:
      run:
        shell: bash

    name: Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    steps:

    - name: Acquire sources
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - uses: actions/cache@v2
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
        restore-keys: |
         ${{ runner.os }}-pip-

    - name: Run tests
      run: |
        pip install .[test]
        pytest tests

    - name: Generate coverage report
      if: matrix.python-version == '3.9'
      run: |
        pytest --cov=mqttwarn tests
        coverage xml

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
