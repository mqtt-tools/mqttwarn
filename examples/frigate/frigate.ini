# Frigate Â» Forward events and snapshots to Ntfy, using mqttwarn.
# https://mqttwarn.readthedocs.io/en/latest/examples/frigate/README.html

[defaults]
functions = frigate.py
launch    = ntfy, store-image

status_publish = True



# =====================
# Frigate event to ntfy
# =====================

# Format: JSON
# Docs:   https://docs.frigate.video/integrations/mqtt/#frigateevents

[config:ntfy]
targets = {
    'test': {
        'url': 'http://username:password@localhost:5555/frigate-testdrive',
        'attachment': '/tmp/mqttwarn-frigate-{camera}-{label}.png',
        'click': 'https://httpbin.org/anything?camera={event.camera}&label={event.label}&zone={event.entered_zones[0]}',
        }
    }

[frigate/events]
filter  = frigate_events_filter()
alldata = frigate_events()
targets = ntfy:test
title   = {event.label} entered {event.entered_zones_str} at {event.time}
format  = {event.label} was in {event.current_zones_str} before

# Limit the alert based on camera/zone.
frigate_skip_rules = {
    'rule-1': {'camera': ['frontyard'], 'entered_zones': ['lawn']},
    }


# =====================
# Frigate image to file
# =====================

# Format: Binary (PNG or JPEG)
# Docs:   https://docs.frigate.video/integrations/mqtt/#frigatecamera_nameobject_namesnapshot

[config:store-image]
module         = file
targets        = {
    'cam-testdrive-goat':        ['/tmp/mqttwarn-frigate-cam-testdrive-goat.png'],
    'cam-testdrive-squirrel':    ['/tmp/mqttwarn-frigate-cam-testdrive-squirrel.png'],
    }

# Configure `file` plugin to pass through payload 1:1.
append_newline = False
decode_utf8    = False
overwrite      = True

[frigate/+/+/snapshot]
alldata = frigate_snapshot_decode_topic()
targets = store-image:{camera_name}-{object_name}
